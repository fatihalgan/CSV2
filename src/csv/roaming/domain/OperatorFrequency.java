package csv.roaming.domain;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;

// Generated Oct 8, 2010 9:42:47 AM by Hibernate Tools 3.3.0.GA

/**
 * OperatorFrequency generated by hbm2java
 */
public class OperatorFrequency implements java.io.Serializable {

	private Long operatorFrequencyId;
	private OperatorCountry operatorCountry;
	private String frequency;
	private String handsetCode1;
	private String handsetCode2;

	public OperatorFrequency() {
	}

	public OperatorFrequency(Long operatorFrequencyId,
			OperatorCountry operatorCountry, String frequency) {
		this.operatorFrequencyId = operatorFrequencyId;
		this.operatorCountry = operatorCountry;
		this.frequency = frequency;
	}

	public OperatorFrequency(Long operatorFrequencyId,
			OperatorCountry operatorCountry, String frequency,
			String handsetCode1, String handsetCode2) {
		this.operatorFrequencyId = operatorFrequencyId;
		this.operatorCountry = operatorCountry;
		this.frequency = frequency;
		this.handsetCode1 = handsetCode1;
		this.handsetCode2 = handsetCode2;
	}

	public Long getOperatorFrequencyId() {
		return this.operatorFrequencyId;
	}

	public void setOperatorFrequencyId(Long operatorFrequencyId) {
		this.operatorFrequencyId = operatorFrequencyId;
	}

	public OperatorCountry getOperatorCountry() {
		return operatorCountry;
	}

	public void setOperatorCountry(OperatorCountry operatorCountry) {
		this.operatorCountry = operatorCountry;
	}

	public String getFrequency() {
		return this.frequency;
	}

	public void setFrequency(String frequency) {
		this.frequency = frequency;
	}

	public String getHandsetCode1() {
		return this.handsetCode1;
	}

	public void setHandsetCode1(String handsetCode1) {
		this.handsetCode1 = handsetCode1;
	}

	public String getHandsetCode2() {
		return this.handsetCode2;
	}

	public void setHandsetCode2(String handsetCode2) {
		this.handsetCode2 = handsetCode2;
	}

	@Override
	public boolean equals(final Object other) {
		if (!(other instanceof OperatorFrequency))
			return false;
		OperatorFrequency castOther = (OperatorFrequency) other;
		return new EqualsBuilder().append(operatorCountry,
				castOther.operatorCountry).append(frequency,
				castOther.frequency).isEquals();
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder(-675714375, 1941944157).append(
				operatorCountry).append(frequency).toHashCode();
	}

}
